..
  Warning: this file is automatically generated.  Edits will be lost


======================= ======================================================================================================================================== 
Function                Parameters                                                                                                                               
======================= ======================================================================================================================================== 
:func:`search`          (:class:`token<Types.AuthToken>`, :class:`query<Types.QueryType>`) ``->`` :class:`Types.ObjectList`                                      
:func:`getLogRecords`   (:class:`token<Types.AuthToken>`, :class:`fromDate<Types.DateTime>`, :class:`toDate<Types.DateTime>`) ``->`` :class:`Types.LogRecords`   
======================= ======================================================================================================================================== 


----

.. function:: search(token,query) -> ObjectList

   Search the metadata catalog and return identifiers of metadata records that
   match the criteria.

   :param token: The authentication token returned by ``login()``

   :type token: :class:`Types.AuthToken`

   :param query: The criteria for matching the characteristics of the metadata
     objects of interest.

   :type query: :class:`Types.QueryType`

   :returns: A list of objects that match the specified search criteria

   :rtype: :class:`Types.ObjectList`

   :raises Exceptions.InvalidToken:
     :detailCode: 4290

   :raises Exceptions.ServiceFailure:
     :detailCode: 4310

   :raises Exceptions.NotAuthorized:
     :detailCode: 4280

   :raises Exceptions.InvalidRequest:
     :detailCode: 4300

   :raises Exceptions.NotImplemented:
     :detailCode: 4281



----

.. function:: getLogRecords(token,fromDate,toDate) -> LogRecords

   Retrieves consolidated log information for the specified date range
   (inclusive) for the entire DataONE infrastructure

   :param token: The authentication token returned by ``login()``

   :type token: :class:`Types.AuthToken`

   :param fromDate: Starting time for records in response

   :type fromDate: :class:`Types.DateTime`

   :param toDate: End time for records in response

   :type toDate: :class:`Types.DateTime`

   :returns:

   :rtype: :class:`Types.LogRecords`

   :raises Exceptions.InvalidToken:
     :detailCode: 4290

   :raises Exceptions.ServiceFailure:
     :detailCode: 4350

   :raises Exceptions.NotAuthorized:
     :detailCode: 4320

   :raises Exceptions.NotImplemented:
     :detailCode: 4321

.. TODO::
    Define the response structure and access control rules

.. TODO::
    getLogRecords should really be able to respond to a query rather than just a
    simple date range


