Coordinating Node APIs for V0.3
-------------------------------


These APIs are implemented by Coordinating Nodes for version 0.3. This is a reduced set of functionality compared to the full set of APIs envisioned for Coordinating Nodes.

.. todo:: 
   The APIs need to be edited for consistency of method signatures and naming.
   Update the sequence diagrams to reflect the edits to the API.


Authentication API
~~~~~~~~~~~~~~~~~~

Methods for authentication and authorization.

.. module:: CN_authorization_0_3
   :synopsis: Methods for authentication and authorization

::

  login(user, password, [auth_system]) -> token
  verify(token) -> boolean


Query API
~~~~~~~~~

The Query API handles searches of science metadata and system metadata; also exposes log records held by CNs. This log-related functionality probably needs to be split out into the Logging and Alert API (not yet defined).

.. module:: CN_query_0_3
   :synopsis: Handles queries against science metadata, system metdata, and log records held by CNs

::

  getLogRecords(token, fromDate, toDate) -> logRecords
  search(token, query) -> list of GUIDs


.. function:: getLogRecords (token, fromDate, toDate) -> logRecords

  Retrieves consolidated log information for the specified date range (inclusive) for the entire DataONE infrastructure. 

:param token: authentication token

:param fromDate: specified by appropriate standard (ISO? W3C?)

:param toDate: specified by appropriate standard (ISO? W3C?)

:returns: the set of log records specified; format is not yet specified; the set of records may be empty

  .. todo:: 
  - Format of the consolidated log records need to be specified.

.. function:: search (token, query) -> list of metadata GUIDs

  Search the metadata catalog and return GUIDs of metadata records that meet the criteria.
  
  :param token: authentication token; ignored for V0.3
  
  :param query: The criteria for matching the characteristics of the metadata objects of interest. The structure of this query is not yet defined.
  
  .. todo:
     - Details of query specification for `search(token, query)` needs to be worked out. 
     - Is returning a list of metadata GUIDs sufficent?


CRUD API
~~~~~~~~

V0.3 Read operations for Coordinating Nodes; also includes internal resolver.

.. module:: CN_crud_0_3
   :synopsis: Read operations for Coordinating Nodes
   
::

  getSystemMetadata(token, GUID) -> systemMetadata
  get(token, GUID) -> metadata or list of MNs holding data
  resolve(GUID) -> systemMetadataGUID
  
.. exception:: NotFound

.. function:: getSystemMetdata(token, GUID)

  **Note** Not strictly required by V0.3 use cases, but probably useful for testing and development.
  
  Describes the object located at the endpoint of a GUID. This is necessary
  to enable a client (e.g. a CN doing synchronization of new content) to
  determine what type of information is being referenced before it is
  registered in the system metadata. Helps to avoid accidental download of
  data objects rather than metadata.
  
  **Note** This method cannot be used to retrieve the system metadata of a system metadata object. You can only pass in the GUID of data or a science metadata object.

  :param token: authentication token; ignored for V0.3

  :param GUID: Identifier for the object in question. The GUID identifies a data or science metadata object.

  :returns: System metadata object describing the object.
  
  :raises NotFound: There is no data or sciece metadata object identified by the given GUID.
  

.. function:: get (token, GUID) -> object or list of MNs holding the object

  For metadata (system and science), retrieves the object identified by GUID. For data, a list of MNs holding the data is returned.

  :param token: authentication token; ignored for V0.3

  :param GUID: The identifier for the object to be retrieved.

  :rtype: 
  For system metadata objects, the system metadata itself is returned. For science metadata objects, this will be the byte stream of the science metadata oject. For data objects, **the data object itself is not returned**; instead a list of member nodes holding the data is returned.

  :raises NotFound: The object specified by GUID does not exist.
  
  .. todo:: This method name should be changed since it has different semantics than the method of the same name on MNs.

.. function:: resolve (GUID)

  This method resolves the GUID of any object to the GUID of system metadata for that object.

  **Note** This is an internal method and not exposed outside of CNs.

  :param GUID: the GUID of a data object, a science metadata object, or a system metadata object

  :returns: The GUID of the relevant system metadata object.

  :raises NotFound: The object specified by GUID does not exist.


Replication API
~~~~~~~~~~~~~~~

The Replication API handles replication of data and science metadata content among member nodes. Such replication is not part of V0.3 functionality, so there are no Replication API methods required.


Synchronization API
~~~~~~~~~~~~~~~~~~~

The Synchronization API manages synchronization of system metadata and science metadata among CNs. Since this will be handled out-of-band with respect to the CN APIs for V0.3, there are no Synchronization API methods required for V0.3.


Register API
~~~~~~~~~~~~

Register API methods manage registration of Member Nodes and is not implemented for for V0.3. Instead, registry information about MNs is managed manually.


Server Authentication API
~~~~~~~~~~~~~~~~~~~~~~~~~


State of Health API
~~~~~~~~~~~~~~~~~~~

The Health API contains methods for determining the status of the DataONE infrastructure, including both the CNs and MNs.

.. module:: CN_health_0_3
   :synopsis: Methods for reporting on the state of health of a CN and on the entire DataONE infrastructure

:: 

  generateReport(token) -> statusReport

.. function:: generateReport(token) -> statusReport

   .. note:: This method is used by Use Case 10 "MN Status Reports" for V0.3. However instead of a complete set of detailed status reports, the V0.3 implementation of the use case will utilize thee the ``MN_health_0_3.heartbeat()`` method to compile very basic information about the MNs. Later versions of this method will use the richer ``MN_health.getStatus(token)`` method.

   Returns a status report for all of the registered Member Nodes. The
   information returned is used to give administrators information necessary to
   maintain the infrastructure.

   :param token: Identity with authority to generate reports.
   
   :rtype: Status report, ideally in XML + stylsheet or at least XHTML.

.. raw:: latex

   \newpage
