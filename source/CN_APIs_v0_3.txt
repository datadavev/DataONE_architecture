Coordinating Node APIs for V0.3
-------------------------------


These APIs are implemented by Coordinating Nodes for version 0.3. This is a reduced set of functionality compared to the full set of APIs envisioned for Coordinating Nodes.

.. todo:: 
   The APIs need to be edited for consistency of method signatures and naming.
   Update the sequence diagrams to reflect the edits to the API.


Authentication API
~~~~~~~~~~~~~~~~~~

.. module:: CN_authorization_0_3
   :synopsis: Methods for authentication and authorization

::

  login(user, password, [auth_system]) -> token
  requestToken ()
  setAccess (token, GUID, accessLevel) -> boolean
  setOwner(token, userid, objectList) -> objectList
  newAccount(username, password, [auth_system]) -> identity_GUID
  verify(token) -> boolean





Query API
~~~~~~~~~

.. module:: CN_query_0_3
   :synopsis: Handles queries against the experiment and other metadata held by CNs
   
.. function:: getAllCopies (token, ownerID)

.. function:: getLinksAndCites (GUID, fromDate, toDate)

.. function:: getLogRecords (GUID, fromDate, toDate)

.. function:: getLogRecords (nodeID, fromDate, toDate)

.. function:: query (token, query)

.. function:: searchForData ()

.. function:: usageQuery (token, GUID)


CRUD API
~~~~~~~~

.. module:: CN_crud_0_3
   :synopsis: Read operations for Coordinating Nodes

.. function:: getSystemMetdata(token, GUID)

.. function:: get (token, GUID)

.. function:: resolve (GUID, token)


Replication API
~~~~~~~~~~~~~~~

.. module:: CN_replication_0_3
   :synopsis: Manages replication of content between Member Nodes
   
.. function:: getDefaultReplicationPolicy (sess)

.. function:: getMNReplicateList ()

.. function:: getReplicationPolicy (sess, ID)

.. function:: isReplicationNeeded ()

.. function:: replicateMetadata ()

.. function:: setDefaultReplicationPolicy (sess, policy)

.. function:: setReplicationPolicy (sess, policy, ID)


Synchronization API
~~~~~~~~~~~~~~~~~~~

The Synchronization API manages synchronization of system metadata and science metadata among CNs. Since this will be handled out-of-band with respect to the CN APIs for V0.3, there are no Synchronization API methods required for V0.3.

Register API
~~~~~~~~~~~~

Register API methods manage registration of Member Nodes and is not implemented for for V0.3. Instead, registry information about MNs is managed manually.


Server Authentication API
~~~~~~~~~~~~~~~~~~~~~~~~~


State of Health API
~~~~~~~~~~~~~~~~~~~

The Health API contains methods for determining the status of the DataONE infrastructure, including both the CNs and MNs.

.. module:: CN_health_0_3
   :synopsis: Methods for reporting on the state of health of a CN and on the entire DataONE infrastructure

:: 

  generateReport(token) -> statusReport

.. function:: generateReport(token) -> statusReport

   .. note:: This method is used by Use Case 10 "MN Status Reports" for V0.3. However instead of a complete set of detailed status reports, the V0.3 implementation of the use case will utilize thee the ``MN_health_0_3.heartbeat()`` method to compile very basic information about the MNs. Later versions of this method will use the richer ``MN_health.getStatus(token)`` method.

   Returns a status report for all of the registered Member Nodes. The
   information returned is used to give administrators information necessary to
   maintain the infrastructure.

   :param token: Identity with authority to generate reports.
   
   :rtype: Status report, ideally in XML + stylsheet or at least XHTML.

.. raw:: latex

   \newpage
