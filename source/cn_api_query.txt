Query API
~~~~~~~~~

.. module:: CN_query
   :synopsis: 
     Handles queries against science metadata, system metdata, and log
     records held by CNs

The Query API handles searches of science metadata and system metadata.  It also 
exposes log records held by CNs. This log-related functionality probably needs
to be split out into the Logging and Alert API (not yet defined).


====================== =================================
Function               Parameters
====================== =================================
:func:`search`         ``(token, query) ->`` :class:`Types.ObjectList`
:func:`getLogRecords`  ``(token, query) ->`` :class:`Types.LogRecords`
====================== =================================


----

.. function:: search (token, query) -> ObjectList

   Search the metadata catalog and return identifiers of metadata records that
   match the criteria.

   :param token: authentication token

   :type token: :class:`Types.AuthToken`

   :param query: The criteria for matching the characteristics of the metadata
     objects of interest. 

   :type query: :class:`Types.QueryType`

   :returns: A list of objects that match the specfied search criteria

   :rtype: :class:`Types.ObjectList`

   :raises Exceptions.InvalidToken: 
     :errorCode: 401
     :detailCode: 4290

   :raises Exceptions.ServiceFailure
     :errorCode: 500
     :detailCode: 4310

   :raises: Exceptions.NotAuthorized
     :errorCode: 401
     :detailCode: 4280

   :raises: Exceptions.InvalidRequest
     :errorCode: 400
     :detailCode: 4300


----

.. function:: getLogRecords (token, fromDate, toDate) -> LogRecords

   Retrieves consolidated log information for the specified date range
   (inclusive) for the entire DataONE infrastructure.

   :param token: authentication token

   :param fromDate: 
     specified by appropriate standard (ISO? W3C?)

   :param toDate: 
     specified by appropriate standard (ISO? W3C?)

   :returns:
     the set of log records specified; format is not yet specified; the set of
     records may be empty

   :rtype: :class:`Types.LogRecords`

   :raises Exceptions.InvalidToken: 
     :errorCode: 401
     :detailCode: 4290

   :raises Exceptions.ServiceFailure
     :errorCode: 500
     :detailCode: 4350

   :raises: Exceptions.NotAuthorized
     :errorCode: 401
     :detailCode: 4320

   :raises: Exceptions.InvalidRequest
     :errorCode: 400
     :detailCode: 4320

.. TODO:: This method should really accept a simple query type to specify the
    set of log records to be retrieved.

----

.. TODO:: Flesh these out...

----

.. function:: getAllCopies (token, ownerID)

.. function:: getLinksAndCites (GUID, fromDate, toDate)

.. function:: getLogRecords (nodeID, fromDate, toDate)

.. function:: query (token, query)
    This is a DUPE of search().  Clean up use cases.

.. function:: searchForData ()
    This is a DUPE of search(). Clean up use cases.

.. function:: usageQuery (token, GUID)

