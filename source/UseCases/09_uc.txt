Use Case 09 - Replicate MN to MN
--------------------------------

Author
  VDC TWG

Date
  - 20091001 Filled out description a bit more
  - 20090925 Adding to use case description and documentation
  - 20090114 (TWG meeting).  Subsequent various modifications.

Version 
  Draft

Goal
  Replicate data from Member Node to Member Node.

Summary 

  Replication of content between Member Nodes (MN) is done to improve
  persistence of information (avoid data loss with loss of MN) and to improve
  accessibility (more choices for content retrieval can lower bandwidth
  requirements for any particular MN). The process of replication may be
  facilitated by a Coordinating Node (CN), or perhaps only between MNs. The
  interaction diagram presented here follows the former notion, where
  replication is facilitated by a CN.

  A full copy of a data package is made during the replication process, so the
  original experiment metadata and data is copied to the recipient MN. An
  important question is whether that content is stored in it's original form
  (for data this must be the case) or translated into a form that is supported
  by the MN (likely to be the case for experiment metadata).  

  If experiment metadata is translated into a local dialect by a recipient MN,
  then it is important that the original metadata is preserved on the CNs, as
  it is always possible that the original MN where the content was published
  may go offline or be removed from the DataONE system.
  


Actors
  Member Node x2, Coordinating Node

Preconditions 
  - Content is present on a Member Node
  
Triggers
 - New data is available on a Member Node

 - Information on a Member Node is altered

 - Capabilities of a Member Node changes (accepting more or less content)

 - Replication policy of DataONE or a Member Node changes


Post Conditions
  - Content is present on one more Member Node

  - System metadata is updated to reflect the change

  - Watchers are notified of the change

  - Member Node and Coordinating Node logs are updated


.. figure:: images/09_interaction.png
   :width: 75%

   Interactions for use case 09. The diagram describes transfer of a single
   object from MN_B to MN_A as directed by a CN. It isassumed that the object
   does not exist on MN_B and the object has been identified as requiring
   synchronization by the CN checking its status in the system metadata.


..
  @startuml images/09_interaction.png
  !include ../plantuml.conf
  title Interactions: 09 - Replicate data from Member Node to Member Node

  participant "CRUD API" as m_crud_a << Member Node A >>
  participant "Synchronization API" as c_sync << Coordinating Node >>
  participant "CRUD API" as m_crud_b << Member Node B >>
  
  c_sync -> m_crud_b: synchronize(token, GUID)
  m_crud_b --> c_sync: ACK
  
  m_crud_b -> m_crud_a: get(token, GUID)
  m_crud_a --> m_crud_b: object
  
  m_crud_b -> c_sync: update(token, GUID)
  c_sync --> m_crud_b: ACK
  
  note right
    After retrieval, the MN tells the CN that 
    the object has been replicated.  Alternative is
    that the object is transfer is marked as 
    provisional and verified later.
  end note

  @enduml


.. raw:: latex

   \newpage

